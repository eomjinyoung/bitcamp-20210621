<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BoardMapper">
  
  <resultMap type="Board" id="BoardMap">
    <id column="board_id" property="no"/> 
    <result column="contents" property="content"/>
    <result column="created_date" property="registeredDate"/>
    <result column="view_count" property="viewCount"/>
  </resultMap>
  
  <!-- #{} 을 사용하여 값이 아닌 SQL 코드를 삽입할 수 있는가?
       => 없다! 오류 발생!!!
     
    [#{} 문법의 한계] 
    in-parameter 는 컬럼의 값을 지정할 때 사용한다. 
    그리고 in-parameter 자리에 값을 놓을 때는 #{프로퍼티명} 문법을 사용한다.
      
      select *
      from x_board
      where title = #{value}
      
    그러나 테이블 이름이나 컬럼 이름, 
    SQL 키워드(예: select, from, insert, values, into, set, asc, desc, order, by 등)가 들어갈 자리는 
    in-parameter로 지정할 수 없다. 
    in-parameter로 지정할 수 없는 자리에 #{프로퍼티명}을 사용할 수 없다.
    
      select *
      from #{name} <==== 안된다!
      where title = #{value}
      order by 
        #{column} #{sort}  <==== 둘 다 안된다.
        
  --> 
  <select id="select1" resultMap="BoardMap" parameterType="string">
    select 
      board_id,
      title,    
      contents,
      created_date, 
      view_count  
    from x_board
    order by board_id #{sortType}
  </select>
  

  <!-- 문자열 치환 문법(${})으로 SQL 코드를 삽입하기
       => SQL 키워드(테이블 이름과 컬럼 이름 포함)가 들어갈 자리에 
          in-parameter 처럼 값을 넣고 싶다면 ${프로퍼티명} 을 사용하라! 
       [경고!]
       => 사용자가 입력한 값을 직접 SQL 코드에 삽입하는 경우 "SQL 삽입 공격"을 받을 수 있다.
       => 따라서 ${프로퍼티명} 문법을 사용할 때는 절대로 사용자가 입력한 값을 그대로 전달하지 말라!
       => 사용자가 입력한 값을 자바 코드에서 판단하여 자바 코드로 입력한 값을 전달하라!
     -->
  <select id="select2" resultMap="BoardMap" parameterType="string">
    select 
      board_id,
      title,    
      contents,
      created_date, 
      view_count  
    from x_board
    order by board_id ${sortType}
  </select>
  
  <!-- 
     ${} 는 SQL 코드를 삽입할 수 있다.
   -->
  <select id="select3" resultMap="BoardMap" parameterType="string">
    select 
      board_id,
      title,    
      contents,
      created_date, 
      view_count  
    from x_board
    order by ${sort}
  </select>
  
  <!-- 
     ${} 는 SQL 코드를 삽입할 수 있다.
   -->
  <select id="select4" resultMap="BoardMap" parameterType="map">
    select 
      board_id,
      title,    
      contents,
      created_date, 
      view_count  
    from x_board
    order by ${columnName} ${sortType}
  </select>
  
  <!-- 
     ${} 는 SQL 코드를 삽입할 수 있다.
   -->
  <select id="count" resultType="int" parameterType="string">
    select 
      count(*)  
    from ${tableName}
  </select>
  
  <delete id="delete1" parameterType="string">
    delete from x_board
    where title = #{value}
  </delete>
  
  <delete id="delete2" parameterType="string">
    delete from x_board
    where ${condition}
  </delete>
</mapper>








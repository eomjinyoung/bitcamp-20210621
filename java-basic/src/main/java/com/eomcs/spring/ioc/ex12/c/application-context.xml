<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
    
    <context:component-scan base-package="com.eomcs.spring.ioc.ex12.c"/>

<!-- Mybatis SqlSessionFactory 준비하기 
  => 보통 클래스 이름이 XxxFactoryBean 이라면 
     생성되는 객체는 Xxx 이다.
  => 그런데 SqlSessionFactoryBean 클래스가 생성하는 객체는 
     SqlSession 이 아니라 SqlSessionFactory 이다.
  => 왜?
     SqlSessionFactory 객체를 만드는 클래스는 
     이름을 SqlSessionFactoryFactoryBean 이라고 짓는 것이 일반적인데,
     Mybatis 개발자는 이름 중간에 Factory가 두 번 들어가는 것이 싫었던 가보다.
-->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">

      <!-- mybatis 설정 파일의 경로를 프로퍼티에 저장한다. -->
      <!--  
      <property name="configLocation">
        <bean class="org.springframework.core.io.ClassPathResource">
          <constructor-arg value="com/eomcs/spring/ioc/ex12/c/mybatis-config.xml"/>
        </bean>
      </property>
      -->
      
      <!-- mybatis를 스프링과 연동하면, 
           DataSource는 스프링에서 관리하는 객체를 사용해야 한다.
           mybatis가 만든 DataSource를 사용할 수 없다. --> 
      <property name="dataSource" ref="dataSource" />

      <!-- SQL 맵퍼 파일이 있는 경로를 설정하면, 
           SqlSessionFactory에서 그 경로에서 SQL 맵퍼 파일을 찾을 것이다. -->           
      <property name="mapperLocations" 
                value="classpath*:com/eomcs/spring/ioc/ex12/c/*Mapper.xml" />  

      <!-- Board 클래스 처럼 데이터를 담는 객체(Value Object = Domain Object)의 
           별명을 자동으로 등록하기
           => 패키지를 지정하면 그 패키지에 있는 모든 클래스에 대해 
              클래스 이름을 별명으로 자동 부여한다. --> 
      <property name="typeAliases" 
                value="com.eomcs.spring.ioc.ex12.Board"/> 
    </bean>
    
<!-- mybatis가 사용할 DataSource 객체 준비하기
     => DataSource? 
        - DB 커넥션 풀의 기능을 수행한다. 
     => Spring 프레임워크에서 제공하는 DataSource 구현체를 사용할 때
        - DriverManagerDataSource 클래스가 들어있는 
          spring-jdbc 라이브러리를 추가해야 한다.
     => Apache 에서 제공하는 DataSource 구현체를 사용할 때
        - BasicDataSource 클래스가 들어 있는 
          apache-commons-dbcp 라이브러리를 추가해야 한다.
-->
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="${jdbc.driver}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
  </bean>

	
<!-- 스프링 설정 파일에서 사용할 .properties 파일을 로딩하는 객체 준비 -->
  <context:property-placeholder 
      location="com/eomcs/spring/ioc/ex12/jdbc.properties"/>	
</beans>







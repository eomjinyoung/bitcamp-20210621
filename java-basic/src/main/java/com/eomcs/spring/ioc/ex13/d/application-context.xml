<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    <context:component-scan base-package="com.eomcs.spring.ioc.ex13.d"/>
    
    <!-- AOP 필터 객체 생성 -->
    <bean id="myAdvice" class="com.eomcs.spring.ioc.ex13.d.MyAdvice"/> 
    
    <!-- AOP 적용 -->
    <aop:config>
        <!-- 어느 pointcut에 어떤 advice를 끼워 넣을 지 설정한다. -->
        <aop:aspect id="aspect1" ref="myAdvice">
            
            <!-- 필터에서 호출하려는 메서드의 파라미터 값 받기 -->
            <aop:before 
                pointcut="execution(* com.eomcs.spring.ioc.ex13.d.X.*(..)) and args(y,x)" 
                method="doBefore"/>
            
            <!-- 메서드를 호출한 후 그 메서드가 리턴한 값 받기 -->
            <aop:after-returning 
                pointcut="execution(* com.eomcs.spring.ioc.ex13.d.X.*(..))" 
                method="doAfterReturning"
                returning="returnValue"/>
                
            <!-- 메서드를 호출할 때 예외가 발생했다면 그 예외 정보를 받기 -->
            <aop:after-throwing 
                pointcut="execution(* com.eomcs.spring.ioc.ex13.d.X.*(..))" 
                method="doAfterThrowing"
                throwing="error"/>    
        </aop:aspect>
    </aop:config>
</beans>






